Problem Description
Given an index k, return the kth row of the Pascal's triangle.
Pascal's triangle: To generate A[C] in row R, sum up A'[C] and A'[C-1] from previous row R - 1.
Example:
Input : k = 3
Return : [1,3,3,1]
Note: k is 0 based. k = 0, corresponds to the row [1].
Note: Could you optimize your algorithm to use only O(k) extra space?
code
def getRow(k):
    row = [1] * (k + 1)

    for i in range(2, k + 1):
        prev = 1
        for j in range(1, i):
            temp = row[j]
            row[j] += prev
            prev = temp

    return row

# Example usage:
k = 3
result = getRow(k)
print(result)  # Output: [1, 3, 3, 1]
